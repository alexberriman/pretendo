# Simple API Example
# Minimal configuration to get started

resources:
  # Users resource
  - name: users
    fields:
      - name: id
        type: number
      - name: name
        type: string
      - name: email
        type: string
    relationships:
      - type: hasMany
        resource: todos
        foreignKey: userId

  # Todos resource
  - name: todos
    fields:
      - name: id
        type: number
      - name: title
        type: string
      - name: completed
        type: boolean
        defaultValue: false
      - name: userId
        type: number
    relationships:
      - type: belongsTo
        resource: users
        foreignKey: userId

# Configuration options
options:
  port: 3000
  corsEnabled: true
  defaultPageSize: 10
  maxPageSize: 50
  auth:
    enabled: false
  docs:
    enabled: true
    requireAuth: false

# Custom routes
routes:
  - path: "/status"
    method: "get"
    type: "json"
    response:
      status: "online"
      version: "1.0.0"
      apiName: "Simple API Example"
    description: "API status endpoint"
  
  - path: "/users/:id/profile"
    method: "get"
    type: "json"
    response:
      userId: "{id}"
      profile:
        avatar: "https://example.com/avatars/{id}.png"
        dateJoined: "2023-01-{id}"
    description: "User profile information"
  
  - path: "/echo"
    method: "post"
    type: "javascript"
    code: "// Will echo back request data"
    description: "Echo service for testing"

# Initial data
data:
  users:
    - id: 1
      name: John Doe
      email: john@example.com
    - id: 2
      name: Jane Smith
      email: jane@example.com

  todos:
    - id: 1
      title: Learn pretendo
      completed: false
      userId: 1
    - id: 2
      title: Build an awesome frontend
      completed: false
      userId: 1
    - id: 3
      title: Write documentation
      completed: true
      userId: 2